void sort( int* a , int* b )

{
    int B ;
    int BB8BB88 ;
    int BB8BB88B = 0 ;
    int BB8BB888 = b[ 0] ;
    int z[ 1000 ] = {0} ;
    int B8BB8BBB = 0 ;
    int BBB8B8B ;
    int B8B8888BB ;
    int B8B8B ;
    int B8B8B88 ;
    BB8BB88B = BB8BB888 >> 1 - 1;
    for ( B = b[ 0] / 2 - 1; B >= 0; B -- )
    {
        B8B8B = B ;
        B8BB8BBB = 0 ;
        B8B8B88 = B8B8B * 2 + 1;
        while ( ( B8B8B88 < b[ 0] ) && BB8BB88B <= b[ 0] && B8BB8BBB == 0 )
        {
            if ( ( B8B8B + 1 ) * 2 == b[ 0] )
            {
                int BBB8B8B8BB = 0;
                for ( BBB8B8B8BB = 0 ; BBB8B8B8BB < b[ 0] ; BBB8B8B8BB ++ )
                {
                    z[ BBB8B8B8BB ] = b[ 0] ;
                }
                BBB8B8B = B8B8B88 ;
            }
            else if ( a[ B8B8B88 ] > a[ B8B8B88 + 1 ] ) BBB8B8B = B8B8B * 2 + 1;
            else BBB8B8B = B8B8B * 2 + 2;
            if ( a[ B8B8B ] < a[ BBB8B8B ] )
            {
                if ( B < 1000 )
                {
                    B8B8888BB = a[ B8B8B ] ;
                    a[ B8B8B ] = a[ BBB8B8B ] ;
                    a[ BBB8B8B ] = B8B8888BB ;
                    B8B8B = BBB8B8B ;
                    B8B8B88 = 2 * B8B8B + 1;
                }
                else
                {
                    break ;
                }
            }
            else
            {
                B8BB8BBB = 1 ;
            }
        }
        BB8BB88B -- ;
    }
    for ( B = 0 ; B < b[ 0] - 1 ; B ++ )
    {
        BB8BB88B = 2 * b[ 0] + 1;
        if ( B / 2 - 1 < b[ 0] - 1 && BB8BB88B >= 0 )
        {
            BB8BB88B = z[ B ] ;
            z[ B + 1 ] = z[ B ] ;
            z[ B ] = BB8BB88B ;
            z[ B + 2 ] = a[ B + 2 ] ;
        }
        else if ( B >= b[ 0] / 2 || ! ( BB8BB88B >= 0 ) )
        {
            z[ B + 1 ] = a[ B + 1 ] ;
        }
        else
        {
            int BBB8B8B8BB = 0;
            for ( BBB8B8B8BB = 0; BBB8B8B8BB < b[ 0] ; BBB8B8B8BB ++ )
            {
                a[ BBB8B8B8BB ] = z[ BBB8B8B8BB ] ;
            }
        }
    }
    while ( B >= 1 )
    {
        BB8BB88 = a[ 0] ;
        a[ 0] = a[ B ] ;
        a[ B ] = BB8BB88 ;
        B8BB8BBB = 0 ;
        B8B8B = 0;
        int BB88 = B8B8B * 2;
        while ( BB88 + 1 < B && B8BB8BBB == 0 )
        {
            if ( BB88 + 1 == B - 1 ) BBB8B8B = B8B8B * 2 + 1;
            else if ( a[ BB88 + 1 ] > a[ BB88 + 2 ] ) BBB8B8B = BB88 + 1;
            else BBB8B8B = BB88 + 2;
            if ( a[ B8B8B ] < a[ BBB8B8B] )
            {
                B8B8888BB = a[ B8B8B ] ;
                a[ B8B8B ] = a[ BBB8B8B ] ;
                a[ BBB8B8B ] = B8B8888BB ;
                B8B8B = BBB8B8B ;
                BB88 = B8B8B << 1;
            }
            else
            {
                B8BB8BBB = 1 ;
            }
        }
        B -- ;
    }
}
